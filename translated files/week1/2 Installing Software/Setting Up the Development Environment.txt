[MUSIC] Hi and welcome to module one. In module one,
we'll be covering three topics. Number one, Software Installation. Number two Coding Editors, and
number three will talk about Git. So let's go through these one by one. Software installation number one,
you obviously can't develop a Ruby on Rails application unless you have
Ruby and Ruby on Rails installed. So we'll go through that process. And the process is different for
Mac, Window and Linux. I will be covering all three of
those operating systems one by one. Next we'll cover coding editors. And I know a lot of developers are very
passionate about their coding editors. And if you are vim/ or emacs person,
Who really likes using those editors I probably wouldn't be able
to talk you out of it, which is fine. Because every person should be
using the editor of their choice, one that they enjoy. Having said that I'm gonna show you
some other editors available for your Ruby and Ruby on Rails development. And how you could use those editors, and specifically, the editor that I happen
to like, which is called Sublime Text. Lastly, we'll cover GIT. GIT is a distributed
version control system. Basically it's a bunch of words, but what it means is that it lets
you take snapshots of your code. So, imagine yourself coding,
you code something up, and, it all works. So you wanna take a snapshot of that
particular code, at that particular time. So, imagine, you code for a while. You take a snapshot. It all works. Things are good. As you keep coding, maybe you introduce
some errors into your program. And you want to go back to the last point
where you know that things worked and your able to do that because that what
get direct lets you do as version control system. [MUSIC] It used to be that GIT was only used
by developers, things have changed, and now even web designers or
even people who are not working in IT, for example publishers or
editors, use Git as well. Because everybody recognizes
the value of being able to take a snap shot of your work, and be able
to come back to it at any given point. And actually Rails encourages you to
use Git because as we're gonna see, when you generate a Rail's application, it
generates a bad Git ignore file for you. So we see this drive that Rails sort
of pushing in the right direction to use a version control system,
and specifically Git. Another reason to use Git, is that at
the end of a course when we build our web application, we're actually going to
use Git to deploy it to the cloud. The same way that you use Git to control
your version locally, so as you code and make a mistake, you are able to go
back to a previous good version. When you deploy application using Git,
you could do the same thing. If application doesn't work anymore,
you could roll back to a previous good version of the application
that you know has worked. With that I will see you in module one.